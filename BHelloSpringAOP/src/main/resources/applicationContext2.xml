<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--导入别的配置文件-->
    <!--
    <import resource="A01_ConstructorDI.xml"/>
    <import resource="A02_SetterDI.xml"/>
    <import resource="beans02.xml"/>
    -->

    <!--这里我不用xml来配置bean了，我用纯java的形式配置,配置在AppConifg.java中-->
    <!--
        log日志的包也要加入IOC容器
        @ComponentScan({"com.gyc.a01loglog","com.gyc.controller","com.gyc.service","com.gyc.dao","com.gyc.pojo"})
    -->

    <!--开启注解-->
    <context:annotation-config/>
    <!--扫描包：从哪个包下面去找bean, 我使用AppConfig配置，下面这段就不要了-->
    <context:component-scan base-package="com.gyc.pojo,com.gyc.dao,com.gyc.service,com.gyc.controller,com.gyc.a01log"/>


    <bean id="userServiceImpl2" class="com.gyc.service.serviceImpl.UserServiceImpl"/>
    <!--配置AOP-->
    <!--way2、使用自定的切面GYCAspcet完成AOP配置-->
    <bean id="gycAspect" class="com.gyc.a02MyAspect.GYCAspect"/>
    <aop:config>
        <!--aop:aspcet 自定义的切面，引用ref要引用的那个自定义的切面-->
        <aop:aspect ref="gycAspect">
            <!--切入点：在哪执行方法. execution(要执行的位置* * * * *)-->
            <aop:pointcut id="myJoinPoint" expression="execution(* com.gyc.service.serviceImpl.UserServiceImpl.*(..))"/>
            <!--通知-->
            <aop:before method="gycBefore" pointcut-ref="myJoinPoint"/>
            <aop:after method="gycAfter" pointcut-ref="myJoinPoint"/>
        </aop:aspect>
    </aop:config>
</beans>